Q. 4) Build a responsive Navbar, on smaller screens it should be a hamburger menu which on click should reveal the menu items nicely, and on larger screens they should be displayed directly on the screen.
Ans- Html code:-
<!DOCTYPE html>
<html>
<head>
  <title>Responsive Navbar</title>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
  <nav>
    <div class="logo">Logo</div>
    <ul class="nav-links">
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
    <div class="burger">
      <div class="line"></div>
      <div class="line"></div>
      <div class="line"></div>
    </div>
  </nav>
  <script src="script.js"></script>
</body>
</html>

Css code:-
nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
  background-color: #333;
  color: #fff;
}

.logo {
  font-size: 24px;
  font-weight: bold;
}

.nav-links {
  display: flex;
  justify-content: space-between;
  align-items: center;
  list-style: none;
  margin: 0;
  padding: 0;
}

.nav-links li {
  margin-right: 20px;
}

.nav-links a {
  text-decoration: none;
  color: #fff;
}

.burger {
  display: none;
  cursor: pointer;
}

.burger .line {
  width: 25px;
  height: 3px;
  background-color: #fff;
  margin: 5px;
}

@media screen and (max-width: 768px) {
  .nav-links {
    position: absolute;
    top: 70px;
    right: 0;
    background-color: #333;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    height: auto;
    opacity: 0;
    pointer-events: none;
    transition: all 0.5s ease;
  }

  .nav-links li {
    margin: 10px 0;
  }

  .burger {
    display: block;
  }
}

javascript code file:- 
document.addEventListener('DOMContentLoaded', function() {
  const burger = document.querySelector('.burger');
  const navLinks = document.querySelector('.nav-links');

  burger.addEventListener('click', function() {
    navLinks.classList.toggle('nav-active');
    burger.classList.toggle('toggle');
  });
});
